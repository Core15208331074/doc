name: 1a. Deploy/ DEV EXPRESS
on:
  workflow_dispatch:
  push:
    branches: [ develop ]
env:
  github_token: ${{ secrets.GIT_HUB_TOKEN }}
  provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
concurrency:
  group: deploy_development
  cancel-in-progress: true
jobs:
  loadenv:
    name: Setup Pipeline Environment
    runs-on: ubuntu-latest
    outputs:
      hasSB: ${{ steps.loadEnvStep.outputs.hasSB }}
      hasSIT: ${{ steps.loadEnvStep.outputs.hasSIT }}
      hasUATEXT: ${{ steps.loadEnvStep.outputs.hasUATEXT }}
      requireBuild: ${{ steps.loadEnvStep.outputs.requireBuild }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
        with:
            configFile: 'base_only'
      - id: loadEnvStep
        run: ./.github/workflows/scripts/load_env.sh
  deploy-sb:
    name: deploy/ Sandbox
    runs-on: ubuntu-latest
    needs: loadenv
    timeout-minutes: 60
    if: ${{ needs.loadenv.outputs.hasSB == 'true' }}
    environment:
      name: pcf_sb
    concurrency:
      group: job_to_sb
      cancel-in-progress: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
        with:
            configFile: 'base_only'
      - name: Download config file
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          APP_ENV: 'SB'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: ./.github/workflows/scripts/download_config.sh
      - name: Setup Node and Dependencies
        uses: ./.github/workflows/actions/setup-node14
        if: ${{ env.APP_TYPE == 'nestjs' || env.APP_TYPE == 'reactjs' }}
      - name: Setup JDK
        uses: ./.github/workflows/actions/setup-jdk11
        if: ${{ env.APP_TYPE =='springboot' }}
      - name: Build Application
        env:
          APP_ENV: 'SB'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          APP_BUILT_FOLDER: ${{ env.APP_BUILT_FOLDER }}
        if: ${{ needs.loadenv.outputs.requireBuild == 'true' }}
        run: ./.github/workflows/scripts/build.sh
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Deploy App to PCF
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          PCF_ENV: 'UAT'
          APP_ENV: 'SB'
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/push_app.sh
      - name: End of Job
        run: echo "::set-output name=endStatus::done"

  deploy-dev:
    name: deploy/ Development
    runs-on: ubuntu-latest
    needs: loadenv
    timeout-minutes: 60
    environment:
      name: pcf_dev
    concurrency:
      group: job_to_dev
      cancel-in-progress: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
        with:
            configFile: 'base_only'
      - name: Download config file
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          APP_ENV: 'DEV'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: ./.github/workflows/scripts/download_config.sh
      - name: Setup Node and Dependencies
        uses: ./.github/workflows/actions/setup-node14
        if: ${{ env.APP_TYPE == 'nestjs' || env.APP_TYPE == 'reactjs' }}
      - name: Setup JDK
        uses: ./.github/workflows/actions/setup-jdk11
        if: ${{ env.APP_TYPE =='springboot' }}
      - name: Build Application
        env:
          APP_ENV: 'DEV'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          APP_BUILT_FOLDER: ${{ env.APP_BUILT_FOLDER }}
        if: ${{ needs.loadenv.outputs.requireBuild == 'true' }}
        run: ./.github/workflows/scripts/build.sh
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Deploy App to PCF
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          PCF_ENV: 'UAT'
          APP_ENV: 'DEV'
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/push_app.sh
      - name: End of Job
        run: echo "::set-output name=endStatus::done"
  deploy-sit:
    name: deploy/ SIT
    runs-on: ubuntu-latest
    needs: [loadenv, deploy-dev, deploy-sb]
    timeout-minutes: 60
    if: ${{ needs.loadenv.outputs.hasSIT == 'true' && needs.deploy-sb.outputs.endStatus == 'done' && needs.deploy-dev.outputs.endStatus == 'done' }}
    environment:
      name: pcf_sit
    concurrency:
      group: job_to_sit
      cancel-in-progress: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
        with:
            configFile: 'base_only'
      - name: Download config file
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          APP_ENV: 'SIT'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: ./.github/workflows/scripts/download_config.sh
      - name: Setup Node and Dependencies
        uses: ./.github/workflows/actions/setup-node14
        if: ${{ env.APP_TYPE == 'nestjs' || env.APP_TYPE == 'reactjs' }}
      - name: Setup JDK
        uses: ./.github/workflows/actions/setup-jdk11
        if: ${{ env.APP_TYPE =='springboot' }}
      - name: Build Application
        env:
          APP_ENV: 'SIT'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          APP_BUILT_FOLDER: ${{ env.APP_BUILT_FOLDER }}
        if: ${{ needs.loadenv.outputs.requireBuild == 'true' }}
        run: ./.github/workflows/scripts/build.sh
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Deploy App to PCF
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          PCF_ENV: 'UAT'
          APP_ENV: 'SIT'
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/push_app.sh
      - name: End of Job
        run: echo "::set-output name=endStatus::done"

  test-performance:
    name: test/ Performance
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      # - name: Setup Node and Dependencies
      #   uses: ./.github/workflows/actions/setup-node14
      # - name: Install K6 Postman
      #   run: npm install -D postman-to-k6
      # - name: Convert Postman to K6 Script
      #   run: pwd && postman-to-k6 .github/workflows/customs/api_performance_test/collection.json -o .github/workflows/customs/api_performance_test/k6-script.js && ls -al .github/workflows/customs/api_performance_test/
      # - name: Run K6 script
      #   run: ./.github/workflows/scripts/test_k6_postman.sh

  test-dast:
    name: test/ DAST
    needs: test-performance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2