name: 1. Deploy/ Deploy Release
on:
  workflow_dispatch:
    inputs:
      releaseDate:
        description: 'Release Date. Ex: 2021-01-01'
        type: string
        required: true
        default: ''
      changeTicket:
        type: string
        required: false
        default: ''
      incidentTicket:
        type: string
        required: false
        default: ''
env:
  github_token: ${{ secrets.GIT_HUB_TOKEN }}
  provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
concurrency:
  group: deploy_release
  cancel-in-progress: true
jobs:
  loadenv:
    name: Setup Pipeline Environment
    runs-on: ubuntu-latest
    outputs:
      hasSB: ${{ steps.loadEnvStep.outputs.hasSB }}
      hasSIT: ${{ steps.loadEnvStep.outputs.hasSIT }}
      hasUATEXT: ${{ steps.loadEnvStep.outputs.hasUATEXT }}
      requireBuild: ${{ steps.loadEnvStep.outputs.requireBuild }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
      - id: loadEnvStep
        run: ./.github/workflows/scripts/load_env.sh
  create-release:
    name: Create New Release
    runs-on: ubuntu-latest
    needs: loadenv
    timeout-minutes: 60
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: develop
      - name: Create New Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          inputChangeTicket: ${{ github.event.inputs.changeTicket }}
          inputIncidentTicket: ${{ github.event.inputs.incidentTicket }}
        with:
          branch: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
  deploy-uat:
    name: deploy/ UAT
    runs-on: ubuntu-latest
    needs: create-release
    timeout-minutes: 60
    environment:
      name: pcf_uat
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
      - name: Download config file
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          APP_ENV: 'UAT'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: ./.github/workflows/scripts/download_config.sh
      - name: Setup Node and Dependencies
        uses: ./.github/workflows/actions/setup-node14
        if: ${{ env.APP_TYPE == 'nestjs' || env.APP_TYPE == 'reactjs' }}
      - name: Setup JDK
        uses: ./.github/workflows/actions/setup-jdk11
        if: ${{ env.APP_TYPE =='springboot' }}
      - name: Build Application
        env:
          APP_ENV: 'UAT'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          RELEASE: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
          APP_BUILT_FOLDER: ${{ env.APP_BUILT_FOLDER }}
        if: ${{ env.APP_REQUIRE_BUILD == 'true' }}
        run: ./.github/workflows/scripts/build.sh
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Deploy App to PCF
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          PCF_ENV: 'UAT'
          APP_ENV: 'UAT'
          inputChangeTicket: ${{ github.event.inputs.changeTicket }}
          inputIncidentTicket: ${{ github.event.inputs.incidentTicket }}
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/push_app.sh

  deploy-uat-ext:
    name: deploy/ UAT EXT
    runs-on: ubuntu-latest
    needs: create-release
    timeout-minutes: 60
    if: ${{ needs.loadenv.outputs.hasUATEXT == 'true' }}
    environment:
      name: pcf_uat_ext
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
      - name: Download config file
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          APP_ENV: 'UAT-EXT'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: ./.github/workflows/scripts/download_config.sh
      - name: Setup Node and Dependencies
        uses: ./.github/workflows/actions/setup-node14
        if: ${{ env.APP_TYPE == 'nestjs' || env.APP_TYPE == 'reactjs' }}
      - name: Setup JDK
        uses: ./.github/workflows/actions/setup-jdk11
        if: ${{ env.APP_TYPE =='springboot' }}
      - name: Build Application
        env:
          APP_ENV: 'UAT-EXT'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          RELEASE: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
          APP_BUILT_FOLDER: ${{ env.APP_BUILT_FOLDER }}
        if: ${{ env.APP_REQUIRE_BUILD == 'true' }}
        run: ./.github/workflows/scripts/build.sh
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Deploy App to PCF
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          PCF_ENV: 'UAT-EXT'
          APP_ENV: 'UAT-EXT'
          inputChangeTicket: ${{ github.event.inputs.changeTicket }}
          inputIncidentTicket: ${{ github.event.inputs.incidentTicket }}
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/push_app.sh

  deploy-prod:
    name: deploy/ PROD
    runs-on: ubuntu-latest
    needs: deploy-uat
    timeout-minutes: 60
    environment:
      name: pcf_prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
      - name: Download config file
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          APP_ENV: 'PROD'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: ./.github/workflows/scripts/download_config.sh
      - name: Setup Node and Dependencies
        uses: ./.github/workflows/actions/setup-node14
        if: ${{ env.APP_TYPE == 'nestjs' || env.APP_TYPE == 'reactjs' }}
      - name: Setup JDK
        uses: ./.github/workflows/actions/setup-jdk11
        if: ${{ env.APP_TYPE =='springboot' }}
      - name: Build Application
        env:
          APP_ENV: 'PROD'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          RELEASE: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
          APP_BUILT_FOLDER: ${{ env.APP_BUILT_FOLDER }}
        if: ${{ env.APP_REQUIRE_BUILD == 'true' }}
        run: ./.github/workflows/scripts/build.sh
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Deploy App to PCF
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'EAS'
          PLATFORM: 'EAS'
          PCF_ENV: 'PROD'
          APP_ENV: 'PROD'
          inputChangeTicket: ${{ github.event.inputs.changeTicket }}
          inputIncidentTicket: ${{ github.event.inputs.incidentTicket }}
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/push_app.sh
  raise-pull-request-to-master:
    name: PR to Master
    needs: deploy-prod
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
      - name: Create Automated PR
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
          destination_branch: "master"
          pr_title: ${{ format('Automatic Merge release/{0} to MASTER after release', github.event.inputs.releaseDate) }}
          pr_body: "An automated PR to MASTER after release"
          pr_label: "release"                               # Comma-separated list (no spaces)
          pr_draft: false                                    # Creates pull request as draft
          pr_allow_empty: true                              # Creates pull request even if there are no changes
          github_token: ${{ secrets.GIT_HUB_TOKEN }}
  raise-pull-request-to-develop:
    name: PR to Develop
    needs: deploy-prod
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
      - name: Create Automated PR
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
          destination_branch: "develop"
          pr_title: ${{ format('Automatic Merge release/{0} to DEVELOP after release', github.event.inputs.releaseDate) }}
          pr_body: "An automated PR to DEVELOP after release"
          pr_label: "release"                               # Comma-separated list (no spaces)
          pr_draft: false                                    # Creates pull request as draft
          pr_allow_empty: true                              # Creates pull request even if there are no changes
          github_token: ${{ secrets.GIT_HUB_TOKEN }}
  add-release-tag:
    name: Add release tag
    needs: deploy-prod
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
      - name: Push Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ format('release-{0}', github.event.inputs.releaseDate) }}
          tag_prefix: ''
  deploy-prod-dr:
    name: deploy/ PROD DR
    runs-on: ubuntu-latest
    needs: deploy-prod
    timeout-minutes: 60
    environment:
      name: pcf_dr
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
      - name: Download config file
        env:
          FOUNDATION: 'SEA'
          PLATFORM: 'EAS'
          APP_ENV: 'PROD'
          IS_DR: 'YES'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        run: ./.github/workflows/scripts/download_config.sh
      - name: Setup Node and Dependencies
        uses: ./.github/workflows/actions/setup-node14
        if: ${{ env.APP_TYPE == 'nestjs' || env.APP_TYPE == 'reactjs' }}
      - name: Setup JDK
        uses: ./.github/workflows/actions/setup-jdk11
        if: ${{ env.APP_TYPE =='springboot' }}
      - name: Build Application
        env:
          APP_ENV: 'PROD'
          GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          RELEASE: ${{ format('release/{0}', github.event.inputs.releaseDate) }}
          APP_BUILT_FOLDER: ${{ env.APP_BUILT_FOLDER }}
        if: ${{ env.APP_REQUIRE_BUILD == 'true' }}
        run: ./.github/workflows/scripts/build.sh
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Deploy App to PCF
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'SEA'
          PLATFORM: 'EAS'
          PCF_ENV: 'PROD'
          APP_ENV: 'PROD'
          IS_DR: 'YES'
          inputChangeTicket: ${{ github.event.inputs.changeTicket }}
          inputIncidentTicket: ${{ github.event.inputs.incidentTicket }}
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/push_app.sh
  stop-dr-app:
    name: Stop DR Application
    runs-on: ubuntu-latest
    needs: deploy-prod-dr
    timeout-minutes: 60
    environment:
      name: pcf_dr_stop
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set Github Environment
        uses: ./.github/workflows/actions/setvars
      - name: Checkout Provisioning CLI
        uses: ./.github/workflows/actions/checkout-provisioningcli
      - name: Stop Application
        uses: ./.github/actions/Actions-Provisioning@v2
        env:
          FOUNDATION: 'SEA'
          PLATFORM: 'EAS'
          PCF_ENV: 'PROD'
          APP_ENV: 'PROD'
          inputChangeTicket: ${{ github.event.inputs.changeTicket }}
          inputIncidentTicket: ${{ github.event.inputs.incidentTicket }}
        with:
          provisioning_token: ${{ secrets.PROVISIONING_TOKEN }}
          client_id: ${{ secrets.OAUTH2_CLIENT_ID }}
          client_secret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
          provisioning_cli_version: 'latest'
          script: .github/workflows/scripts/pcf_stop.sh